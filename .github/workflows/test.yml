name: Test, Lint and scan Application for vulnerabilities
on:
  - workflow_dispatch
jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: Install linter
        run: pip install flake8
      - name: Run linter
        run: flake8 -v src/

  scan-dependencies-safety:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: Install safety
        run: pip install safety
      - name: Run safety (dependency scanner)
        run: safety check --full-report

  scan-code-semgrep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: Scan codebase with semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/ci
            p/owasp-top-ten
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}


      - name: Copy env file
        run: cp .env.testing .env

      - name: Start postgres
        run: docker-compose up -d db

      - name: Pull latest app image
        run: |
          docker-compose pull app

      - name: Run database migrations
        run: docker-compose run --rm app migrate

      - name: Run unit tests
        run: docker-compose run --rm app test

  trigger-deployment:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - test
      - scan-code-semgrep
      - lint
      - scan-dependencies-safety
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}

      - name: Calculate environment and image tag
        id: calculate-values
        run: |
          echo "::set-output name=branch_name::$(git branch --no-color --show-current)-$(git rev-parse --short HEAD)"
          if [ $(git branch) -ne "master" ]; then ENVIRONMENT_NAME="dev"; else ENVIRONMENT_NAME="prod"; fi

          echo "::set-output name=environment::echo $ENVIRONMENT_NAME"
      - name: Deploy to Preview Environment
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: 14499421
          repo: jxeldotdev/todo-backend
          token: ${{ secrets.PERSONAL_TOKEN }}
          inputs: '{ "environment": "${{ steps.calculate-values.outputs.environment }}", "image-tag": "${{ steps.calculate-values.outputs.branch_name }}" }'

      - name: Deploy to Production Environment
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: Deploy to Production Environment
          token: ${{ secrets.PERSONAL_TOKEN }}
