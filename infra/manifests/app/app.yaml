apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-backend
  namespace: todo-backend
  labels:
    app: todo-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: todo-backend
  template:
    metadata:
      labels:
        app: todo-backend
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        ports:
        - containerPort: 80
      - name: app
        image: joelfreeman/todo-backend:latest
        args: ["web"]
        env:
          - name: CORS_ALLOWED_ORIGINS
            valueFrom:
              configMapKeyRef:
                name: todo-backend-config
                key: CORS_ALLOWED_ORIGINS
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: todo-backend-config
                key: POSTGRES_DB
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: todo-backend-config
                key: POSTGRES_HOST
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: todo-backend-db-credentials
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: todo-backend-db-credentials
                key: POSTGRES_PASSWORD
        ports:
          - containerPort: 8080   
      volumes:
        - name: nginx-conf
          configMap: 
            name: todo-backend-nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: todo-backend
  namespace: todo-backend
spec:
  selector:
    app: todo-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
  